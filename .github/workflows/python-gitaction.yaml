name: jinttoBack django deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permission:
  id-token: write
  contents: read
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Set Up  Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Build Docker Compose
        run: docker-compose build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::813621738328:role/jinttoRole
          role-session-name: jinttoRoleSessionName
          aws-region: ap-northeast-2















# name: Deploy to ECS Python Backend
# on:
#   push:
#     branches:
#       - main  # 또는 프로젝트에서 사용하는 메인 브랜치의 이름으로 수정

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v2

#     - name: Set up Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: 3.8

#     - name: Install Dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt

#     - name: Build Docker Image
#       run: |
#         docker build -t jintto_back:0.0.2 .

#     - name: Amazon ECR Login
#       run: |
#         aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 813621738328.dkr.ecr.ap-northeast.amazonaws.com

#     - name: Push to Amazon ECR
#       run: |
#         docker tag jintto_back:0.0.2 813621738328.dkr.ecr.ap-northeast.amazonaws.com/repo-for-jinttoback:latest
#         docker push 813621738328.dkr.ecr.ap-northeast-2.amazonaws.com/repo-for-jinttoback:0.0.2

#   deploy:
#     runs-on: ubuntu-latest

#     needs: build  # "build" job이 성공적으로 완료된 후에만 실행

#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v2

#     - name: Deploy to ECS
#       run: |
#         aws ecs update-service --cluster repo-for-jinttoback --service cluster-for-jinttoBack --force-new-deployment





# name: ECS Deployment

# on:
#   push:
#     branches:
#       - main  # 또는 프로젝트에서 사용하는 메인 브랜치의 이름으로 수정

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v2

#     - name: Set up Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: 3.8

#     - name: Install Dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt

#     - name: Build Docker Image
#       run: |
#         docker build -t your-docker-image-name:latest .

#     - name: Amazon ECR Login
#       run: |
#         aws ecr get-login-password --region your-aws-region | docker login --username AWS --password-stdin your-account-id.dkr.ecr.your-aws-region.amazonaws.com

#     - name: Push to Amazon ECR
#       run: |
#         docker tag your-docker-image-name:latest your-account-id.dkr.ecr.your-aws-region.amazonaws.com/your-repository-name:latest
#         docker push your-account-id.dkr.ecr.your-aws-region.amazonaws.com/your-repository-name:latest

#   deploy:
#     runs-on: ubuntu-latest

#     needs: build  # "build" job이 성공적으로 완료된 후에만 실행

#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v2

#     - name: Deploy to ECS
#       run: |
#         aws ecs update-service --cluster your-ecs-cluster-name --service your-ecs-service-name --force-new-deployment


